{"ast":null,"code":"var _jsxFileName = \"/Users/charlotte/FORMATION OCR/Projet 10/Debuggez-une-application-React.JS/src/components/Field/index.js\";\nimport PropTypes from \"prop-types\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FIELD_TYPES = {\n  INPUT_TEXT: 1,\n  TEXTAREA: 2\n};\nconst Field = ({\n  type = FIELD_TYPES.INPUT_TEXT,\n  label,\n  name,\n  placeholder\n}) => {\n  let component;\n  switch (type) {\n    case FIELD_TYPES.INPUT_TEXT:\n      component = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: name,\n        placeholder: placeholder,\n        \"data-testid\": \"field-testid\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n      break;\n    case FIELD_TYPES.TEXTAREA:\n      component = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: name,\n        \"data-testid\": \"field-testid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this);\n      break;\n    default:\n      component = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: name,\n        placeholder: placeholder,\n        \"data-testid\": \"field-testid\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputField\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), component]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Field;\nField.propTypes = {\n  type: PropTypes.oneOf(Object.values(FIELD_TYPES)),\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string\n};\nField.defaultProps = {\n  label: \"\",\n  placeholder: \"\",\n  type: FIELD_TYPES.INPUT_TEXT,\n  name: \"field-name\"\n};\nexport default Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","FIELD_TYPES","INPUT_TEXT","TEXTAREA","Field","type","label","name","placeholder","component","required","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","propTypes","oneOf","Object","values","string","defaultProps","$RefreshReg$"],"sources":["/Users/charlotte/FORMATION OCR/Projet 10/Debuggez-une-application-React.JS/src/components/Field/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nimport \"./style.scss\";\n\nexport const FIELD_TYPES = {\n  INPUT_TEXT: 1,\n  TEXTAREA: 2,\n};\n\nconst Field = ({ type = FIELD_TYPES.INPUT_TEXT, label, name, placeholder }) => {\n  let component;\n  switch (type) {\n    case FIELD_TYPES.INPUT_TEXT:\n      component = (\n        <input\n          type=\"text\"\n          name={name}\n          placeholder={placeholder}\n          data-testid=\"field-testid\"\n          required\n        />\n      );\n      break;\n    case FIELD_TYPES.TEXTAREA:\n      component = <textarea name={name} data-testid=\"field-testid\" />;\n      break;\n    default:\n      component = (\n        <input\n          type=\"text\"\n          name={name}\n          placeholder={placeholder}\n          data-testid=\"field-testid\"\n          required\n        />\n      );\n  }\n  return (\n    <div className=\"inputField\">\n      <span>{label}</span>\n      {component}\n    </div>\n  );\n};\n\nField.propTypes = {\n  type: PropTypes.oneOf(Object.values(FIELD_TYPES)),\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n Field.defaultProps = {\n   label: \"\",\n   placeholder: \"\",\n   type: FIELD_TYPES.INPUT_TEXT,\n   name: \"field-name\",\n }\n\nexport default Field;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,OAAO,MAAMC,WAAW,GAAG;EACzBC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI,GAAGJ,WAAW,CAACC,UAAU;EAAEI,KAAK;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAC7E,IAAIC,SAAS;EACb,QAAQJ,IAAI;IACV,KAAKJ,WAAW,CAACC,UAAU;MACzBO,SAAS,gBACPT,OAAA;QACEK,IAAI,EAAC,MAAM;QACXE,IAAI,EAAEA,IAAK;QACXC,WAAW,EAAEA,WAAY;QACzB,eAAY,cAAc;QAC1BE,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACF;MACD;IACF,KAAKb,WAAW,CAACE,QAAQ;MACvBM,SAAS,gBAAGT,OAAA;QAAUO,IAAI,EAAEA,IAAK;QAAC,eAAY;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC/D;IACF;MACEL,SAAS,gBACPT,OAAA;QACEK,IAAI,EAAC,MAAM;QACXE,IAAI,EAAEA,IAAK;QACXC,WAAW,EAAEA,WAAY;QACzB,eAAY,cAAc;QAC1BE,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACF;EACL;EACA,oBACEd,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhB,OAAA;MAAAgB,QAAA,EAAOV;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACnBL,SAAS;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACG,EAAA,GAlCIb,KAAK;AAoCXA,KAAK,CAACc,SAAS,GAAG;EAChBb,IAAI,EAAEP,SAAS,CAACqB,KAAK,CAACC,MAAM,CAACC,MAAM,CAACpB,WAAW,CAAC,CAAC;EACjDM,IAAI,EAAET,SAAS,CAACwB,MAAM;EACtBhB,KAAK,EAAER,SAAS,CAACwB,MAAM;EACvBd,WAAW,EAAEV,SAAS,CAACwB;AACzB,CAAC;AACAlB,KAAK,CAACmB,YAAY,GAAG;EACnBjB,KAAK,EAAE,EAAE;EACTE,WAAW,EAAE,EAAE;EACfH,IAAI,EAAEJ,WAAW,CAACC,UAAU;EAC5BK,IAAI,EAAE;AACR,CAAC;AAEF,eAAeH,KAAK;AAAC,IAAAa,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}